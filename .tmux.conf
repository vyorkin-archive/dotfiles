# Ring the bell if any background window rang a bell
set -g bell-action any

# Default termtype. If the rcfile sets $TERM, that overrides this value.
set -g default-terminal screen-256color

set-option -g default-command "reattach-to-user-namespace -l $SHELL -l"

# Keep your finger on ctrl, or don't
bind-key ^D detach-client

# Create splits and vertical splits
# bind-key v split-window -h
# bind-key ^V split-window -h
# bind-key s split-window
# bind-key ^S split-window

bind k send-keys "clear"\; send-keys "Enter"

# Pane resize in all four directions using vi bindings.
# Can use these raw but I map them to shift-ctrl-<h,j,k,l> in iTerm.
bind-key J resize-pane -D 31
bind-key K resize-pane -U 30
bind-key H resize-pane -L 30
bind-key L resize-pane -R 30

# quick pane cycling
unbind ^A
bind ^A select-pane -t:.+

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# Use vi keybindings for tmux commandline input.
# Note that to get command mode you need to hit ESC twice...
set -g status-keys vi
 
# Use vi keybindings in copy and choice modes
setw -g mode-keys vi
# 
# easily toggle synchronization (mnemonic: e is for echo)
# sends input to all panes in a given window.
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# set first window and pane to index 1 (not 0) to map more to the keyboard layout...
set -g base-index 1
set -g pane-base-index 1

# play nice with system clipboard
set-option -g default-command "reattach-to-user-namespace -l zsh"
bind C-c run "tmux show-buffer | reattach-to-user-namespace pbcopy"
bind C-v run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

# vi style copy&paste
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer

# bind-key -t vi-copy 'v' begin-selection
# bind-key -t vi-copy 'y' copy-selection

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Allows us to use C-a a <command> to send commands to a TMUX session inside 
# another TMUX session
bind-key a send-prefix

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# Mouse mode
setw -g mode-mouse on
set -g mode-mouse on
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on

# Panes
# horizontal and vertical splits
unbind |
bind | split-window -h
unbind _
bind _ split-window

# tile all windows
unbind =
bind = select-layout tiled

unbind +
bind + resize-pane -Z

unbind Right
bind Right resize-pane -R 8
unbind Left
bind Left resize-pane -L 8
unbind Up
bind Up resize-pane -U 4
unbind Down
bind Down resize-pane -D 4

# color scheme (styled as vim-powerline)
set -g status-left-length 52
set -g status-right-length 451
set -g status-fg white
set -g status-bg colour233
set -g pane-border-fg colour245
set -g pane-active-border-fg colour39
set -g message-fg colour16
set -g message-bg colour221
set -g message-attr bold
set -g status-left '#[fg=colour235,bg=colour252,bold] ❐ #S #[fg=colour252,bg=colour238,nobold]⮀#[fg=colour245,bg=colour238,bold] #(whoami) #[fg=colour238,bg=colour234,nobold]⮀'
set -g window-status-format "#[fg=colour235,bg=colour252,bold] #I #W "
set -g window-status-current-format "#[fg=colour234,bg=colour39]⮀#[fg=black,bg=colour39,noreverse,bold] #I: #W #[fg=colour39,bg=colour234,nobold]⮀"

# Screen like binding
unbind C-b
set -g prefix C-a

# No escape time for vi mode
set -sg escape-time 0

# Screen like binding for last window
bind C-a last-window

# Bigger history
set -g history-limit 10000
#
